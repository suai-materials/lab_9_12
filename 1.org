* Лабораторная работа № 9-12

Тема: Профилирование кода средствами инструментальной среды разработки.
Разработка тестовых модулей проекта. Выполнение функционального тестирования
и тестирования интеграции. Документирование результатов.
Тестирование интерфейса пользователя.

Цель: использование технологий и инструментов отладки и тестирования,
встроенных в Visual Studio для выполнения тестирования разного типа
с целью обнаружения ошибок и их дальнейшее исправление, ведение документации
и анализ результатов тестирования.


1. Выполните профилирование кода сайта на Bottle из предыдущей ЛР с помощью команды
   Отладка > Запустить профилирование Python (Debug > Launch python profiling…),
   по умолчанию в окне настроек должно отобразиться название проекта:

   #+CAPTION: Profiling в PyCharm
   [[file:images/2023-05-02_19-29-16_screenshot.png]]

   Полученный отчёт:

   #+CAPTION: Отчёт профилирования
   [[file:images/2023-05-02_19-31-41_screenshot.png]]

   Сравнение двух отчётов:

   #+CAPTION: Сравнение двух отчётов
   [[file:images/2023-05-02_19-34-43_screenshot.png]]

2. Выполните примеры unit-тестов для простейшего модуля Python с функциями калькулятора. Создайте консольное приложение как в ЛР№1. Модуль calc.py будет представлять собой библиотеку, содержащую функции для выполнения основных арифметический действий:

   #+INCLUDE: ./codes/calc.py src python

   Для того, чтобы протестировать эту библиотеку, создайте отдельный файл с названием test_calc.py и поместите туда функции, которые проверяют корректность работы модуля:

   #+INCLUDE: ./codes/test_calc.py src python

   Запустите test_calc.py, выбрав в его контекстном меню Запуск без отладки.

   #+CAPTION: Тестирование =calc=
   [[file:images/2023-05-02_19-41-47_screenshot.png]]

3. Для тестирования набора функций из calc.py с помощью unittest создайте файл с именем utest_calc.py и следующим кодом:

   #+INCLUDE: ./codes/utest_calc.py src python

   #+CAPTION: Запуск тестов
   [[file:images/2023-05-02_19-52-49_screenshot.png]]

   Можно сделать запрос расширенной информации по пройденным тестам, для этого необходимо добавить ключ –v.
   Запустите скрипт utest_calc.py в терминале посредством контекстного меню.
   Введите команду python -m unittest -v utest_calc.py. 

   #+CAPTION: Показ всех тестов
   [[file:images/2023-05-02_19-53-38_screenshot.png]]

4. Создайте ещё одно консольное приложение.
   Подготовьте VS для создания unit-тестов с помощью фреймворка.
   Для этого щелкните проект правой кнопкой мыши в обозревателе решений и выберите платформу
   unittest на вкладке Тест в области свойств (или нажав на значок свойств в панели его инструментов).

   #+CAPTION: Создание проекта в PyCharm
   [[file:images/2023-05-02_20-09-38_screenshot.png]]

   Создайте два unit-теста для проверки работы регулярного выражения на соответствие email
   (вынесите формирование и сравнение со строкой в главный модуль myform_mail.py),
   в одном используя метод assertFalse,
   а в другом – assertTrue (подробнее о методах
   в официальной документации или статье https://tirinox.ru/unit-test-python/).

   В unit-тесте с assertFalse в цикле проверяйте список с примерами email неверного
   формата (перечислить возможные тестовые случаи, не менее 12 с разными типами ошибок),
   например, list_mail_uncor = ["", "1", "m1@", "@mail", …], а в unit-тесте с assertTrue –
   список с корректными email, к примеру, list_mail_cor = ["m.m@mail.ru", "m1@gmail.com", …].

   #+CAPTION: =my_form_mail.py=
   #+INCLUDE: ./codes/my_form_mail.py src python

   #+CAPTION: =ctest_form_mail.py=
   #+INCLUDE: ./codes/ctest_form_mail.py src python

   Ошибка:

   #+CAPTION: Демонстрация ошибки
   [[file:images/2023-05-02_20-58-51_screenshot.png]]

   Суть ошибки в том, что все не все символы были в проверке,
   которые могут быть в почте могут быть в почте.

   Исправленная версия регулярного выражения:
   
   ~r"[a-zA-Z0-9._&=‘\-+]{1,256}@[a-zA-Z0-9]~

   ~{1,100}\.[a-zA-Z0-9]{1,7}"~

   #+CAPTION: Исправленая версия
   [[file:images/2023-05-02_21-04-04_screenshot.png]]

5. Вернитесь к приложению Bottle.
   Интегрируйте модули кода с проверкой работы регулярного выражения
   и соответствующими unit-тестами в свой проект.
   Выполните запуск тестов и отладку работы проекта.
   Зафиксируйте в Git соответствующие изменения (сделайте не менее 2 коммитов).
   Сделайте push на Github.
   Задокументируйте все результаты работы.

   Перенёс файлы функции проверки почты и её тестирование в проект,
   тест выделил в директорию tests.

   #+CAPTION: Первый коммит
   [[file:images/2023-05-02_21-47-15_screenshot.png]]

   Интегрирую функцию в код:
   #+CAPTION: Демонстрация интеграции
   [[file:images/2023-05-02_21-51-17_screenshot.png]]

   Сделал коммит.
   
   #+CAPTION: История коммитов
   [[file:images/2023-05-02_21-52-32_screenshot.png]]

6. С помощью инструментария онлайн-сервиса https://wave.webaim.org/
   выполните проверку валидации и
   тестирование юзабилити следующих сайтов:

   - http://bottlepy.org/docs/dev/index.html

   - https://pypi.org/

   - https://python-scripts.com/web-frameworks.

   Перечислите основные ошибки и предупреждения,
   назовите структурные элементы интерфейса и
   особенности (перейти по соответствующим вкладкам раздела
   «Summary», сделать заключение структуре).

   1. http://bottlepy.org/docs/dev/index.html

      Общий отчёт:

      #+CAPTION: Десонстрация общего отчёта
      [[file:images/2023-05-03_09-53-14_screenshot.png]]

      Демонстрация ошибок:

      #+CAPTION: Ошибки подробнее
      [[file:images/2023-05-03_09-55-31_screenshot.png]]

      Главная ошибка, это остутствие подписи у формы:

      #+CAPTION: Отсутствие подписи у формы
      [[file:images/2023-05-03_09-58-38_screenshot.png]]

      Фактически подпись есть выше, но есть проблема в том, что данная подпись не лежит в форме, и не помечена как label.

      Также было выделено множество ошибок констраста, связаных, с подсветкой кода.
      #+CAPTION: Ошибки констраста
      [[file:images/2023-05-03_10-01-19_screenshot.png]]

      Предупреждения:

      #+CAPTION: Демонстрация предупреждений
      [[file:images/2023-05-03_10-02-59_screenshot.png]]

      Подозрительный альтернативный текст: у логотипа альтернативный текст не отражает содержание логотипа.
      Текст для логотипа: “logo”. Понятно, что содержание картинки отражается довольно слабо,
      хотя при этом при отсутствии изображения можно будет понять, что в этом месте должен был находиться логотип

      Сломанная ссылка: создатели сайта хотели сделать переход на конкретное место страницы,
      где указаны данные о лицензии. Но у них что-то пошло не так, и поэтому ссылка перенаправляет
      просто на саму страницу

      Ссылка на pdf-документ - не на всех устройствах можно с лёгкостью открыть pdf файл, к примеру на Android,
      необходимо скачать файл и открыть через отдельное приложение.

      #+CAPTION: Структурные элементы
      [[file:images/2023-05-03_10-07-19_screenshot.png]]

      Перечисление:
      - Заголовки - используются для обозначения заголовков и подзаголовков

      - Неупорядоченные списки - используются для организации данных

      - Навигация - элемент, используемый для создания навигационных элементов, т.е. элементов для передвижения по сайту

      - Поиск

      - Main content - главное содержимое страницы. В него входят все остальные элементы
      Иерархия:

      - Main content:

	- Heading 1:

	  - Heading 2:

	    - Unordered list

      - Navigation:

	- Heading 3:

	  - Unordered list

	    - Search

      Особенности:
      #+CAPTION: Особенности
      [[file:images/2023-05-03_10-11-00_screenshot.png]]

      - Изображение ссылка

      - Кнопка с изображением

      - Возможность смены языка

   2. https://pypi.org/

      Общий отчёт:
      #+CAPTION: screenshot @ 2023-05-03 10:12:53
      [[file:images/2023-05-03_10-12-53_screenshot.png]]

      Ошибок у данного сайта нет, кроме контрастных и то одна:

      #+CAPTION: Контрасная ошибка
      [[file:images/2023-05-03_10-15-28_screenshot.png]]

      Предупреждения:
      #+CAPTION: Предупреждения
      [[file:images/2023-05-03_10-16-56_screenshot.png]]

      Reduntant alt text - альтернативный текст дублируется текстом рядом с картинкой
      
      No script - присутствуют элементы, которые будут отображаться, если выключен javascript

      Структурные элементы:
      #+CAPTION: Структурные элементы
      [[file:images/2023-05-03_10-18-47_screenshot.png]]

      Иерархия:

      - Header:

	- Heading level 1

	- Search

	- Unordered list

      - Navigation

      - Main content

      - Footer

	- Unordered list

	- Heading level 2
      Особенности:

      #+CAPTION: Особенности
      [[file:images/2023-05-03_10-21-04_screenshot.png]]

      - Пустой альтернативный текст

      - Изображение-ссылка

      - Подпись к форме

      - Skip-link - ссылка, которая позволяет перейти к другому месту страницы

      - Skip-link target - назначение предыдущего пункта

      - Возможность изменения языка

   3. https://python-scripts.com/web-frameworks

      Ошибки:

      #+CAPTION: Ошибки
      [[file:images/2023-05-03_10-23-45_screenshot.png]]

      - Отсутствует подпись у формы

      - Кнопка не имеет текста

      - Ссылка не имеет текста

      - Много ошибок контраста
	
      Предупреждения:
      #+CAPTION: Предупреждения
      [[file:images/2023-05-03_10-25-36_screenshot.png]]

      - Изображение имеет заголовок, но не имеет альтернативного текста

      - Пропущен уровень заголовка

      - Текст возможно сделать заголовком, но он не в заголовочном теге

      - No script

      - Дублирующийся заголовок

      - Layout table
      Структурные элементы:
      #+CAPTION: Структурные элементы
      [[file:images/2023-05-03_10-28-22_screenshot.png]]

      Иерархия:

      - Header

	- Unordered list

	- Search

      - Navigation

	- Unordered list

      - Aside

	- Unordered list

      - Main content

	- Heading level 1

	- Heading level 2

	  - Unorderd list

      - Footer

	- Unordered list

      Особенности:
      #+CAPTION: Особенности
      [[file:images/2023-05-03_10-35-24_screenshot.png]]

      - Пустой альтернативный текст

      - Возможность смены языка
		  	
7. Установите на виртуальную машину TestComplete для автоматизированного тестирования интерфейса (можно скачать с сайта https://smartbear.com/product/testcomplete). Изучите работу
    встроенного демонстрационного примера для веб-интерфейса, запустив тест (к нему можно перейти со стартовой страницы):

    #+CAPTION: TestComplete
    [[file:images/2023-05-03_10-36-50_screenshot.png]]

 
   
Контрольные вопросы:

1. Что означает протестировать интерфейс?
   
   Проверить, соответствует ли пользовательский интерфейс программного обеспечения требованиям,
   и удобно ли пользователям работать с программным продуктом.

2. Какие разновидности тестов вам известны?

   - Модульное

   - Интеграционное

   - Системное

   - Автоматизированное

   - Ручное

   - Тестирование производительности

   - Тестирование безопасности

   - Тестирование совместимости

3. Назовите основные аспекты для документирования при ручном и автоматическом тестировании?
   При ручном и автоматическом тестировании ПО необходимо документировать следующие аспекты:
   1. Цель тестирования
   2. Тестовые сценарии
   3. Результаты тестирования
   4. Описание среды тестирования
   5. Информация о тестировщике
   6. Информация о версии ПО
   7. Информация об автоматизированных тестах
   8. Описание проблем и ошибок
   9. Информация о статусе тестирования
   10. Рекомендации и доработки
